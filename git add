[1mdiff --git a/js/GameOfLife.js b/js/GameOfLife.js[m
[1mindex be316a7..a3f9ff6 100644[m
[1m--- a/js/GameOfLife.js[m
[1m+++ b/js/GameOfLife.js[m
[36m@@ -9,11 +9,6 @@[m
 var GameOfLifeModule = (function() {[m
 [m
     /**[m
[31m-     * @const frequency of field refresh while game is run[m
[31m-     */[m
[31m-    var GAME_SPEED = 250;[m
[31m-[m
[31m-    /**[m
      * GameOfLife constructor[m
      * @constructor[m
      * @param {Field} model[m
[36m@@ -23,7 +18,6 @@[m [mvar GameOfLifeModule = (function() {[m
         console.log("Game Of Life constructor ...");[m
         this.model = model;[m
         this.view = view;[m
[31m-        this.gameRun = false;[m
     }[m
 [m
     /**[m
[36m@@ -55,7 +49,7 @@[m [mvar GameOfLifeModule = (function() {[m
             console.log("on click handler");[m
 [m
             var source = ev.srcElement;[m
[31m-            if (source.parentNode.className === "row") {[m
[32m+[m[32m            if (source.parentNode.className === "row" && !that.view.gameRun) {[m
                 gameCellClick(source);[m
             }[m
 [m
[36m@@ -98,6 +92,27 @@[m [mvar GameOfLifeModule = (function() {[m
             }[m
         }[m
 [m
[32m+[m[32m        /**[m
[32m+[m[32m         * Update state of game continuesly while game running[m
[32m+[m[32m         * @function[m
[32m+[m[32m         */[m
[32m+[m[32m        function updateGame() {[m
[32m+[m[32m            if (that.view.gameRun) {[m
[32m+[m[32m                requestAnimationFrame(updateGame)[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            that.view.curTime = new Date().getTime();[m
[32m+[m
[32m+[m[32m            if ((that.view.curTime - that.view.prevTime) > ViewModule.GAME_SPEED && !that.view.pause) {[m
[32m+[m
[32m+[m[32m                var newGeneration = that.model.runGeneration();[m
[32m+[m[32m                that.view.updateField(newGeneration);[m
[32m+[m
[32m+[m[32m                that.view.prevTime = that.view.curTime;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m
     }[m
 [m
     return GameOfLife;[m
[1mdiff --git a/js/field.js b/js/field.js[m
[1mindex 9299d91..298f984 100644[m
[1m--- a/js/field.js[m
[1m+++ b/js/field.js[m
[36m@@ -47,6 +47,7 @@[m [mvar FieldModule = (function() {[m
                 return Field._checkRules(element.className, aliveNeighbors);[m
             }));[m
             willAlive = temp;[m
[32m+[m[32m            console.log(willAlive);[m
         });[m
 [m
         return willAlive;[m
[1mdiff --git a/js/main.js b/js/main.js[m
[1mindex 3ccedb0..2a1108a 100644[m
[1m--- a/js/main.js[m
[1m+++ b/js/main.js[m
[36m@@ -1,9 +1,15 @@[m
 (function main() {[m
     console.log("main ...");[m
[31m-    var container = document.getElementById("container");[m
[31m-    var buttons = document.getElementById("buttons");[m
[31m-    var view = new ViewModule(container, buttons);[m
[31m-    var field = new FieldModule();[m
[31m-    var controller = new GameOfLifeModule(field, view);[m
[32m+[m
[32m+[m[32m    var container = document.getElementById("container"),[m
[32m+[m[32m        buttons = document.getElementById("buttons"),[m
[32m+[m[32m        view = new ViewModule(container, buttons),[m
[32m+[m[32m        field = new FieldModule(),[m
[32m+[m[32m        controller = new GameOfLifeModule(field, view),[m
[32m+[m[32m        animationFrame = window.requestAnimationFrame || window.msRequestAnimationFrame ||[m
[32m+[m[32m        window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;[m
[32m+[m
[32m+[m[32m    window.requestAnimationFrame = animationFrame;[m
[32m+[m
     controller.initGame();[m
 })();[m
\ No newline at end of file[m
[1mdiff --git a/js/view.js b/js/view.js[m
[1mindex 6983ff5..08ff01c 100644[m
[1m--- a/js/view.js[m
[1m+++ b/js/view.js[m
[36m@@ -21,12 +21,22 @@[m [mvar ViewModule = (function() {[m
         this.colNumber = _countNumberOfColumns(container);[m
         this.rowNumber = _countNumberOfRows();[m
         this.cells = null;[m
[32m+[m[32m        this.gameRun = false;[m
[32m+[m[32m        this.pause = false;[m
[32m+[m[32m        this.curTime = 0;[m
[32m+[m[32m        this.prevTime = 0;[m
     }[m
 [m
     /**[m
[32m+[m[32m     * @const frequency of field refresh while game is run[m
[32m+[m[32m     */[m
[32m+[m[32m    View.GAME_SPEED = 250;[m
[32m+[m
[32m+[m[32m    /**[m
      * @const {String} CSS class of dead cell[m
      */[m
     View.deadCell = "dead";[m
[32m+[m
     /**[m
      * @const {String} CSS class of alive cell[m
      */[m
