var GameOfLifeModule=function(){function GameOfLife(model,view){console.log("Game Of Life constructor ..."),this.model=model,this.view=view}return GameOfLife.prototype.initGame=function(){console.log("Game Of Life init game ..."),this.view.drawField(),this.model.setCells(this.view.cells),this.bindEvents()},GameOfLife.prototype.bindEvents=function(){function onFieldClickHandler(ev){function gameCellClick(source){source.className=ViewModule.aliveCell===source.className?ViewModule.deadCell:ViewModule.aliveCell}var source=ev.srcElement;"row"!==source.parentNode.className||that.view.gameRun||gameCellClick(source)}function onButtonClickHandler(ev){function startButtonClick(source){that.view.gameRun=!that.view.gameRun,requestAnimationFrame(updateGame),changeStartButton(source)}function clearButtonClick(){that.view.clearField()}function oneLifeButton(){var newGeneration;that.view.gameRun&&(that.view.gameRun=!1,changeStartButton()),newGeneration=that.model.runGeneration(),that.view.updateField(newGeneration)}function changeStartButton(){var startButton=that.view.buttons.querySelector("#startButton");startButton.innerHTML=that.view.gameRun?"Stop":"Start"}function templateButtonClick(source){var template=Templates[source.id],aliveCells=that.model.markTemplate(template);that.view.gameRun=!1,that.view.clearField(),that.view.updateField(aliveCells)}function updateGame(){if(that.view.gameRun&&requestAnimationFrame(updateGame),that.view.curTime=(new Date).getTime(),that.view.curTime-that.view.prevTime>ViewModule.GAME_SPEED&&!that.view.pause){var newGeneration=that.model.runGeneration();newGeneration.length||(that.view.gameRun=!1,changeStartButton()),that.view.updateField(newGeneration),that.view.prevTime=that.view.curTime}}var source=ev.srcElement;"startButton"===source.id?startButtonClick(source):"clearButton"===source.id?clearButtonClick():"lifeButton"===source.id?oneLifeButton():source.id in Templates&&templateButtonClick(source)}var that=this;this.view.container.addEventListener("click",onFieldClickHandler),this.view.buttons.addEventListener("click",onButtonClickHandler)},GameOfLife}(),FieldModule=function(){function Field(){console.log("Field constructor ..."),this.cells=null}return Field.bornNumber=3,Field.minNeighborsToLive=2,Field.maxNeighborsToLive=3,Field.prototype.setCells=function(cells){console.log("Field set cells ..."),this.cells=cells},Field.prototype.runGeneration=function(){var temp,willAlive=[],that=this;return this.cells.forEach(function(row,rowNum){temp=willAlive.concat(row.filter(function(element,colNum){var aliveNeighbors=Field._checkNeighborhood(colNum,rowNum,that.cells);return Field._checkRules(element.className,aliveNeighbors)})),willAlive=temp}),willAlive},Field._checkNeighborhood=function(col,row,cells){var i,j,curCol=col-1,curRow=row-1,size=3,aliveNeighbors=0;for(i=0;size>i;i++,curRow++){for(j=0;size>j;j++,curCol++)cells[curRow]&&cells[curRow][curCol]&&(curRow!==row||curCol!==col)&&cells[curRow][curCol].className===ViewModule.aliveCell&&aliveNeighbors++;curCol=col-1}return aliveNeighbors},Field._checkRules=function(curState,neighbors){return"alive"===curState?Field.minNeighborsToLive===neighbors||neighbors===Field.maxNeighborsToLive:neighbors===Field.bornNumber},Field.prototype.markTemplate=function(template){var i,j,rowNum,colNum,aliveCells=[],startCoord=this._positionTemplate(template),row=startCoord.row,col=startCoord.col;for(i=0,rowNum=template.length;rowNum>i;i++)for(j=0,colNum=template[0].length;colNum>j;j++)this.cells[row+i][col+j]&&template[i][j]&&aliveCells.push(this.cells[row+i][col+j]);return aliveCells},Field.prototype._positionTemplate=function(template){var startCol=0,startRow=0,templateHeight=template.length,templateWidth=template[0].length,fieldHeight=this.cells.length,fieldWidth=this.cells[0].length;return fieldHeight>templateHeight&&fieldWidth>templateWidth&&(startCol=Math.floor((fieldWidth-templateWidth)/2),startRow=Math.floor((fieldHeight-templateHeight)/2)),{col:startCol,row:startRow}},Field}();!function(){console.log("main ...");var container=document.getElementById("container"),buttons=document.getElementById("buttons"),view=new ViewModule(container,buttons),field=new FieldModule,controller=new GameOfLifeModule(field,view),animationFrame=window.requestAnimationFrame||window.msRequestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame;window.requestAnimationFrame=animationFrame,controller.initGame()}();var ViewModule=function(){"use strict";function View(container,buttons){console.log("View constructor ..."),this.container=container,this.buttons=buttons,this.colNumber=_countNumberOfColumns(container),this.rowNumber=_countNumberOfRows(),this.cells=null,this.gameRun=!1,this.pause=!1,this.curTime=0,this.prevTime=0}function _countNumberOfColumns(container){var cellWidth,pixelRatio=window.devicePixelRatio,horizontalMatrgins=100*pixelRatio,contWidth=container.clientWidth;return cellWidth=pixelRatio*View.CELL_WIDTH,Math.floor((contWidth-horizontalMatrgins)/cellWidth)}function _countNumberOfRows(){var cellWidth,winHeight=window.innerHeight,pixelRatio=window.devicePixelRatio,headerHeight=100*pixelRatio,verticalMargins=100*pixelRatio;return cellWidth=pixelRatio*View.CELL_WIDTH,Math.floor((winHeight-headerHeight-verticalMargins)/cellWidth)}return View.GAME_SPEED=250,View.deadCell="dead",View.aliveCell="alive",View.CELL_WIDTH=30,View.prototype.drawField=function(){console.log("view draw field ...");var i,j,cell,row,rowNum,colNum,field=document.createDocumentFragment();for(i=0,rowNum=this.rowNumber;rowNum>i;i++){for(row=document.createElement("div"),row.className="row",j=0,colNum=this.colNumber;colNum>j;j++)cell=document.createElement("div"),cell.className="dead",row.appendChild(cell);field.appendChild(row)}this.container.appendChild(field),this._saveCells()},View.prototype._saveCells=function(){console.log("View save cells ...");var i,j,row,rowNum,colNum,cell,allRows=this.container.children,cellsArray=[];for(i=0,rowNum=allRows.length;rowNum>i;i++)for(cellsArray[i]=[],row=allRows[i].children,j=0,colNum=row.length;colNum>j;j++)cell=row[j],cellsArray[i].push(cell);this.cells=cellsArray},View.prototype.updateField=function(aliveCells){console.log("View update field ..."),this.clearField(),this._drawAliveCells(aliveCells)},View.prototype.clearField=function(){console.log("View clear field ..."),this.cells.forEach(function(row){row.forEach(function(el){el.className=View.deadCell})})},View.prototype._drawAliveCells=function(aliveCells){console.log("View draw alive cells ..."),aliveCells.forEach(function(el){el.className=View.aliveCell})},View}(),Templates=function(){var universe=[[1,1,0,1,1,1,1,1,1],[1,1,0,1,1,1,1,1,1],[1,1,0,0,0,0,0,0,0],[1,1,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,1,1],[0,0,0,0,0,0,0,1,1],[1,1,1,1,1,1,0,1,1],[1,1,1,1,1,1,0,1,1]],glider=[[1,0,0],[0,1,1],[1,1,0]],cross=[[0,0,1,1,1,1,0,0],[0,0,1,0,0,1,0,0],[1,1,1,0,0,1,1,1],[1,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,1],[1,1,1,0,0,1,1,1],[0,0,1,0,0,1,0,0],[0,0,1,1,1,1,0,0]];return{universe:universe,glider:glider,cross:cross}}();